name: Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test on ${{ matrix.os }} with Node.js ${{ matrix.node-version }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [14, 16, 18, 20]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run type checking
        run: npm run typecheck
        
      - name: Run linting
        run: npm run lint
        
      - name: Run formatting check
        run: npm run format:check
        
      - name: Run tests
        run: npm run test:ci
        
      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '18'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: test
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build package
        run: npm run build
        
      - name: Test CLI (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          chmod +x dist/cli/index.js
          node dist/cli/index.js --version
          node dist/cli/index.js --help
          
      - name: Test CLI (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          node dist/cli/index.js --version
          node dist/cli/index.js --help
          
  security:
    name: Security audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        run: npm audit --audit-level=moderate
        
      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
          
  integration:
    name: Integration tests
    runs-on: ubuntu-latest
    needs: build
    
    services:
      test-server:
        image: node:18-alpine
        ports:
          - 3000:3000
        options: >-
          --health-cmd "wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build package
        run: npm run build
        
      - name: Start test server
        run: |
          node -e "
            const http = require('http');
            const server = http.createServer((req, res) => {
              res.writeHead(200, { 'Content-Type': 'text/plain' });
              res.end('Test server running');
            });
            server.listen(3001, () => console.log('Test server on port 3001'));
          " &
          sleep 2
          
      - name: Test finding processes
        run: |
          # Test that we can find the test server process
          node -e "
            const { getProcessesOnPort } = require('./dist/index.js');
            getProcessesOnPort(3001).then(processes => {
              if (processes.length === 0) {
                console.error('No processes found on port 3001');
                process.exit(1);
              }
              console.log('Found processes:', processes);
            }).catch(err => {
              console.error('Error:', err);
              process.exit(1);
            });
          "
          
      - name: Test CLI integration
        run: |
          # Test dry run
          node dist/cli/index.js 3001 --dry-run
          
          # Test JSON output
          node dist/cli/index.js 3001 --dry-run --json
          
      - name: Test port availability
        run: |
          node -e "
            const { isPortAvailable } = require('./dist/index.js');
            isPortAvailable(3001).then(available => {
              if (available) {
                console.error('Port 3001 should not be available');
                process.exit(1);
              }
              console.log('Port 3001 is correctly reported as busy');
            }).catch(err => {
              console.error('Error:', err);
              process.exit(1);
            });
          "